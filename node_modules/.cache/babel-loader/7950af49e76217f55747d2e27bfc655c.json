{"ast":null,"code":"import _defineProperty from\"C:/Users/Dell/Desktop/job/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _toConsumableArray from\"C:/Users/Dell/Desktop/job/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/Dell/Desktop/job/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import jsonData from\"../data.json\";import JobCard from\"./JobCard\";import Tags from\"./Tags\";import{v4 as uuidv4}from\"uuid\";import{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var JobList=function JobList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),filterJobList=_useState2[0],setFilterJobList=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),filterTags=_useState4[0],setFilterTags=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),tagListOpen=_useState6[0],isTagListOpen=_useState6[1];var filterJobs=function filterJobs(key,tag){// See if key:tag already exists\nfor(var i=0;i<filterTags.length;i++){if(key===\"languages\"||key===\"tools\"){for(var k in filterTags[i]){if(k===key){for(var j=0;j<filterTags[i][k].length;j++){if(filterTags[i][key][j]===tag){return;}}}}}if(filterTags[i][key]===tag){return;}}if(key===\"languages\"||key===\"tools\"){setFilterTags(function(prevTags){return[].concat(_toConsumableArray(prevTags),[_defineProperty({},key,[tag])]);});}else{setFilterTags(function(prevTags){return[].concat(_toConsumableArray(prevTags),[_defineProperty({},key,tag)]);});}isTagListOpen(true);};var deleteTag=function deleteTag(id){setFilterTags(function(prevTags){return prevTags.filter(function(tag,index){return index!==id;});});};var clearTags=function clearTags(){setFilterTags([]);isTagListOpen(false);};useEffect(function(){var filteredTable=jsonData.filter(function(job){return filterTags.every(function(tag){var _Object$entries$=_slicedToArray(Object.entries(tag)[0],2),key=_Object$entries$[0],value=_Object$entries$[1];if(key===\"languages\"||key===\"tools\"){return job[key].some(function(x){return x.includes(value);});}else{return job[key]===value;}});});setFilterJobList(filteredTable);if(filterTags.length<1){isTagListOpen(false);}},[filterTags]);return/*#__PURE__*/_jsxs(\"section\",{className:\"job-list-container\",children:[tagListOpen&&/*#__PURE__*/_jsx(Tags,{tags:filterTags,deleteTg:deleteTag,clearTg:clearTags}),/*#__PURE__*/_jsx(\"article\",{className:\"card-container\",children:filterJobList.map(function(job){return/*#__PURE__*/_jsx(JobCard,{job:job,filterBtn:filterJobs},uuidv4());})})]});};export default JobList;","map":{"version":3,"sources":["C:/Users/Dell/Desktop/job/src/components/JobList.js"],"names":["jsonData","JobCard","Tags","v4","uuidv4","useState","useEffect","JobList","filterJobList","setFilterJobList","filterTags","setFilterTags","tagListOpen","isTagListOpen","filterJobs","key","tag","i","length","k","j","prevTags","deleteTag","id","filter","index","clearTags","filteredTable","job","every","Object","entries","value","some","x","includes","map"],"mappings":"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","sourcesContent":["import jsonData from \"../data.json\";\nimport JobCard from \"./JobCard\";\nimport Tags from \"./Tags\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { useState, useEffect } from \"react\";\n\nconst JobList = () => {\n\tconst [filterJobList, setFilterJobList] = useState([]);\n\tconst [filterTags, setFilterTags] = useState([]);\n\tconst [tagListOpen, isTagListOpen] = useState(false);\n\n\tconst filterJobs = (key, tag) => {\n\t\t// See if key:tag already exists\n\t\tfor (let i = 0; i < filterTags.length; i++) {\n\t\t\tif (key === \"languages\" || key === \"tools\") {\n\t\t\t\tfor (let k in filterTags[i]) {\n\t\t\t\t\tif (k === key) {\n\t\t\t\t\t\tfor (let j = 0; j < filterTags[i][k].length; j++) {\n\t\t\t\t\t\t\tif (filterTags[i][key][j] === tag) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (filterTags[i][key] === tag) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (key === \"languages\" || key === \"tools\") {\n\t\t\tsetFilterTags((prevTags) => [...prevTags, { [key]: [tag] }]);\n\t\t} else {\n\t\t\tsetFilterTags((prevTags) => [...prevTags, { [key]: tag }]);\n\t\t}\n\n\t\tisTagListOpen(true);\n\t};\n\tconst deleteTag = (id) => {\n\t\tsetFilterTags((prevTags) => {\n\t\t\treturn prevTags.filter((tag, index) => {\n\t\t\t\treturn index !== id;\n\t\t\t});\n\t\t});\n\t};\n\n\tconst clearTags = () => {\n\t\tsetFilterTags([]);\n\t\tisTagListOpen(false);\n\t};\n\n\tuseEffect(() => {\n\t\tconst filteredTable = jsonData.filter((job) => {\n\t\t\treturn filterTags.every((tag) => {\n\t\t\t\tconst [key, value] = Object.entries(tag)[0];\n\t\t\t\tif (key === \"languages\" || key === \"tools\") {\n\t\t\t\t\treturn job[key].some((x) => x.includes(value));\n\t\t\t\t} else {\n\t\t\t\t\treturn job[key] === value;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tsetFilterJobList(filteredTable);\n\t\tif (filterTags.length < 1) {\n\t\t\tisTagListOpen(false);\n\t\t}\n\t}, [filterTags]);\n\treturn (\n\t\t<section className=\"job-list-container\">\n\t\t\t{tagListOpen && (\n\t\t\t\t<Tags tags={filterTags} deleteTg={deleteTag} clearTg={clearTags} />\n\t\t\t)}\n\t\t\t<article className=\"card-container\">\n\t\t\t\t{filterJobList.map((job) => (\n\t\t\t\t\t<JobCard key={uuidv4()} job={job} filterBtn={filterJobs} />\n\t\t\t\t))}\n\t\t\t</article>\n\t\t</section>\n\t);\n};\n\nexport default JobList;\n"]},"metadata":{},"sourceType":"module"}